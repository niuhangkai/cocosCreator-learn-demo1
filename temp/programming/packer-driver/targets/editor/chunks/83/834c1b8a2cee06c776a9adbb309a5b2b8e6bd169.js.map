{"version":3,"sources":["file:///Users/mac20211105/Desktop/cocosCreator-demo-learn/AircraftWars/assets/Scripts/Bg.ts"],"names":["_decorator","Component","Node","ccclass","property","Bg","speed","start","console","log","update","deltaTime","position1","bg01","getPosition","x","setPosition","y","z","position2","bg02","position"],"mappings":";;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;;;;;;;;OAC1B;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBJ,U;;oBAGjBK,E,WADZF,OAAO,CAAC,IAAD,C,UAGHC,QAAQ,CAACF,IAAD,C,UAGRE,QAAQ,CAACF,IAAD,C,2BANb,MACaG,EADb,SACwBJ,SADxB,CACkC;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAS9BK,KAT8B,GASd,GATc;AAAA;;AAY9B;AACAC,QAAAA,KAAK,GAAG;AACJC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH,SAf6B,CAiB9B;;;AACAC,QAAAA,MAAM,CAACC,SAAD,EAAoB;AACtB,gBAAMC,SAAS,GAAG,KAAKC,IAAL,CAAUC,WAAV,EAAlB;AACAN,UAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ,EAAqCE,SAArC,EAAgDC,SAAS,CAACG,CAA1D;AACA,eAAKF,IAAL,CAAUG,WAAV,CAAsBJ,SAAS,CAACG,CAAhC,EAAmCH,SAAS,CAACK,CAAV,GAAa,KAAKX,KAAL,GAAWK;AAAS;AAApE,YAAkFC,SAAS,CAACM,CAA5F;AAEA,gBAAMC,SAAS,GAAG,KAAKC,IAAL,CAAUN,WAAV,EAAlB;AACA,eAAKM,IAAL,CAAUJ,WAAV,CAAsBG,SAAS,CAACJ,CAAhC,EAAmCI,SAAS,CAACF,CAAV,GAAa,KAAKX,KAAL,GAAWK,SAA3D,EAAsEQ,SAAS,CAACD,CAAhF;;AAGA,cAAI,KAAKL,IAAL,CAAUQ,QAAV,CAAmBJ,CAAnB,IAAwB,CAAC,GAA7B,EAAkC;AAC9B,iBAAKJ,IAAL,CAAUG,WAAV,CAAsBJ,SAAS,CAACG,CAAhC,EAAmCI,SAAS,CAACF,CAAV,GAAY,GAA/C,EAAoD,CAApD;AACH;;AAED,cAAI,KAAKG,IAAL,CAAUC,QAAV,CAAmBJ,CAAnB,IAAwB,CAAC,GAA7B,EAAkC;AAC9B,iBAAKG,IAAL,CAAUJ,WAAV,CAAsBG,SAAS,CAACJ,CAAhC,EAAmCH,SAAS,CAACK,CAAV,GAAY,GAA/C,EAAoD,CAApD;AACH;AAGJ;;AApC6B,O;;;;;iBAGjB,I;;;;;;;iBAGA,I","sourcesContent":["import { _decorator, Component, Node } from 'cc';\nconst { ccclass, property } = _decorator;\n\n@ccclass('Bg')\nexport class Bg extends Component {\n\n    @property(Node) // property(Node) 表示这是一个节点类型\n    bg01: Node = null;\n\n    @property(Node) // property(Node) 表示这是一个节点类型\n    bg02: Node = null;\n    \n\n    speed: number = 100;\n    \n\n    // start() 方法是在组件被激活后执行的方法，通常用于初始化组件的状态。\n    start() {\n        console.log(\"start-Bg-scene\")\n    }\n\n    // update() 方法是每帧更新时执行的方法，用于更新游戏对象的状态。deltaTime 参数表示自上一帧以来经过的时间（以秒为单位）。\n    update(deltaTime: number) {\n        const position1 = this.bg01.getPosition();\n        console.log(\"update-Bg-scene122111\", deltaTime, position1.x)\n        this.bg01.setPosition(position1.x, position1.y- this.speed*deltaTime/** 速度*时间 */, position1.z ); \n\n        const position2 = this.bg02.getPosition();\n        this.bg02.setPosition(position2.x, position2.y- this.speed*deltaTime, position2.z ); \n\n\n        if (this.bg01.position.y <= -850) {\n            this.bg01.setPosition(position1.x, position2.y+850, 0);\n        }\n\n        if (this.bg02.position.y <= -850) {\n            this.bg02.setPosition(position2.x, position1.y+850, 0);\n        }\n\n\n    }\n}\n\n"]}