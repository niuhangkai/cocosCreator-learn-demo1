{"version":3,"sources":["file:///Users/mac20211105/Desktop/cocosCreator-demo-learn/AircraftWars/assets/Scripts/Player.ts"],"names":["Prefab","instantiate","_decorator","Component","Node","Vec3","Collider2D","Contact2DType","Animation","Enum","Reward","RewardType","GameManager","LifeCount","ccclass","property","ShootType","Player","type","Number","String","shootTimer","collider","invincibleTime","isInvincible","start","lifeCountUI","updateUI","hp","getComponent","on","BEGIN_CONTACT","onBeginContact","onLoad","node","EventType","TOUCH_MOVE","onTouchMove","update","deltaTime","shootType","Single","singleShoot","Double","doubleShoot","Triple","frequency","bullet1","bulletPrefab","bulletParent","addChild","setWorldPosition","bulletInitPos","worldPosition","bulletPrefab2","bullet2","bulletInitPos2","bulletInitPos3","event","p","position","targetPos","x","getDeltaX","y","getDeltaY","z","setPosition","selfCollider","otherCollider","contact","console","log","reward","rewardType","TwoShoot","scheduleOnce","Bomb","getInstance","AddBombCount","destroy","anim","play","animDown","FINISHED","animHit","onDestroy","off"],"mappings":"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","sourcesContent":["import {Prefab, instantiate, _decorator, Component, Node, EventTouch, Vec3, Collider2D, Contact2DType, IPhysics2DContact,Animation, Enum, game } from 'cc';\nimport { Reward, RewardType } from './Reward';\nimport { EnemyManager } from './EnemyManager';\nimport { GameManager } from './GameManager';\nimport { LifeCount } from './LifeCount';\nconst { ccclass, property } = _decorator;\n\nenum ShootType {\n    Single = 0,\n    Double = 1,\n    Triple = 2,\n}\n@ccclass('Player')\nexport class Player extends Component {\n    // 子弹部分\n    @property\n    // 发射频率，0.5秒发射一次\n    frequency: number = 0.5;\n\n    // 射击计时器\n    shootTimer: number = 0;\n\n    // 获取到子弹预制体，这里需要在编辑中，拖拽预制体到这个属性，并且在下面update中实例化\n    @property(Prefab)\n    bulletPrefab: Prefab = null;\n\n    // 子弹的父节点，子弹会添加到这个节点下\n    @property(Node)\n    bulletParent: Node = null;\n\n    // 子弹的初始位置\n    @property(Node)\n    bulletInitPos: Node = null;\n    \n    // 射击类型\n    @property({type: Enum(ShootType)})\n    shootType: ShootType = ShootType.Single;\n\n    // 第二种子弹的prefab\n    @property(Prefab)\n    bulletPrefab2: Prefab = null;\n\n    // 第二种两个子弹的初始位置\n    @property(Node)\n    bulletInitPos2: Node = null;\n    @property(Node)\n    bulletInitPos3: Node = null;\n\n    // 碰撞体\n    collider: Collider2D = null;\n\n    // 血量为3\n    @property(Number)\n    hp: number = 6;\n\n    // 爆炸动画\n    @property(Animation)\n    anim: Animation = null;\n\n    // 两个主角飞机动画\n    @property(String)\n    animHit: string = '';\n\n    // 飞机爆炸动画\n    @property(String)\n    animDown: string = '';\n\n    // 主角无敌时间\n    invincibleTime: number = 1\n    isInvincible: boolean = false\n\n    // 生命计数器\n    @property(LifeCount)\n    lifeCountUI: LifeCount = null;\n\n    start() {\n        this.lifeCountUI.updateUI(this.hp)\n        // 注册单个碰撞体的回调函数\n        this.collider = this.getComponent(Collider2D);\n\n        if (this.collider) {\n            this.collider.on(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n            // collider.on(Contact2DType.END_CONTACT, this.onEndContact, this);\n        }\n    }\n    // 绑定touchmove事件\n    // onLoad 是 cocos 的钩子函数，在节点加载时调用\n    protected onLoad(): void {\n        this.node.on(Node.EventType.TOUCH_MOVE, this.onTouchMove, this);\n    }\n    protected update(deltaTime: number): void {\n\n        switch(this.shootType) {\n            case ShootType.Single: // 0\n                this.singleShoot(deltaTime);\n                break;\n            case ShootType.Double: // 1\n                this.doubleShoot(deltaTime);\n                break;\n            case ShootType.Triple: // 2\n                this.singleShoot(deltaTime);\n                this.doubleShoot(deltaTime);\n                break;\n        }\n\n\n    }\n    // 单发射击\n    singleShoot(deltaTime: number): void {\n        // deltaTime 是时间间隔,每帧调用一次,每次时间间隔大概0.016秒\n        this.shootTimer += deltaTime;\n        // 如果shootTime大于等于frequency，则发射子弹\n        if (this.shootTimer >= this.frequency) {\n            // 计时器清零\n            this.shootTimer = 0;\n            // 实例化子弹\n            // instantiate 是 cocos 的实例化函数\n            const bullet1 = instantiate(this.bulletPrefab);\n            // 添加到场景中\n            this.bulletParent.addChild(bullet1);\n            // 设置子弹位置\n            bullet1.setWorldPosition(this.bulletInitPos.worldPosition);\n        }\n    }\n    // 双发射击\n    doubleShoot(deltaTime: number): void {\n         // deltaTime 是时间间隔,每帧调用一次,每次时间间隔大概0.016秒\n         this.shootTimer += deltaTime;\n         // 如果shootTime大于等于frequency，则发射子弹\n         if (this.shootTimer >= this.frequency) {\n             // 计时器清零\n             this.shootTimer = 0;\n             // 实例化子弹\n             // instantiate 是 cocos 的实例化函数\n             const bullet1 = instantiate(this.bulletPrefab2);\n             const bullet2 = instantiate(this.bulletPrefab2);\n             // 添加到场景中\n             this.bulletParent.addChild(bullet1);\n             this.bulletParent.addChild(bullet2);\n\n             // 设置子弹位置\n             bullet1.setWorldPosition(this.bulletInitPos2.worldPosition);\n             bullet2.setWorldPosition(this.bulletInitPos3.worldPosition);\n         }\n    }\n\n    // 触摸移动事件\n    onTouchMove(event: EventTouch): void {\n        // 如果游戏暂停，则不进行移动       \n        // if (game.isPaused) {\n        //     return;\n        // }\n        if (this.hp <= 0) {\n            return;\n        }\n\n        // 跟随鼠标移动\n        const p = this.node.position\n        // Vec3 是 cocos 的向量类\n        let targetPos = new Vec3(p.x + event.getDeltaX(), p.y + event.getDeltaY(),p.z);\n        // 限制移动范围\n\n        if (targetPos.x <= -234) {\n            targetPos.x = -234;\n        }\n\n        if (targetPos.x >= 234) {\n            targetPos.x = 234;\n        }\n\n        if (targetPos.y <= -400) {\n            targetPos.y = -400;\n        }\n\n        if (targetPos.y >= 400) {\n            targetPos.y = 400;\n        }\n\n        this.node.setPosition(targetPos);\n    }\n\n    onBeginContact(selfCollider: Collider2D, otherCollider: Collider2D, contact: IPhysics2DContact | null) {\n        console.log('碰撞事件');\n        // 判断是不是奖励\n        const reward = otherCollider.getComponent(Reward);\n        if (reward) {\n            // 判断奖励类型\n            if (reward.rewardType === RewardType.TwoShoot) {\n                this.shootType = ShootType.Double;\n                this.scheduleOnce(() => {\n                    this.shootType = ShootType.Single;\n                }, 5);\n            } else if (reward.rewardType === RewardType.Bomb) {\n                GameManager.getInstance().AddBombCount();\n                otherCollider.node.destroy();\n                // this.shootType = ShootType.Triple;\n            }\n            otherCollider.node.destroy();\n        } else { \n        // 如果主角无敌，则不进行碰撞检测\n        if (this.isInvincible) {\n            return;\n        }\n        this.isInvincible = true;\n        this.hp -= 1;\n        if (this.hp <= 0) {\n            this.anim.play(this.animDown)\n            this.anim.on(Animation.EventType.FINISHED, () => {\n                // this.collider.enabled = false;\n                this.node.destroy();\n            });\n        } else {\n            this.anim.play(this.animHit)\n            // 主角无敌时间\n            this.scheduleOnce(() => {\n                this.isInvincible = false;\n            }, this.invincibleTime);\n        }\n        this.lifeCountUI.updateUI(this.hp)\n        }\n    }\n\n    onDestroy() {\n        if (this.collider) {\n            this.collider.off(Contact2DType.BEGIN_CONTACT, this.onBeginContact, this);\n        }\n    }\n}\n\n"]}